<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>
   <extension-point id="NodeExecutionJobManagerFactory" name="NodeExecutionJobManagerFactory" schema="schema/org.knime.core.NodeExecutionJobManagerFactory.exsd"/>
   <extension-point id="JDBCDriver" name="JDBCDriver" schema="schema/JDBCDriver.exsd"/>
   <extension-point id="DataValueRenderer" name="DataValueRenderer" schema="schema/DataValueRenderer.exsd"/>
   <extension-point id="NodeFactoryClassMapper" name="Changes NodeFactory class names in saved workflows" schema="schema/NodeFactoryClassMapper.exsd"/>
   <extension-point id="DatabaseUtility" name="DatabaseUtility" schema="schema/DatabaseUtility.exsd"/>
   <extension-point id="WizardNodeView" name="WizardNodeView" schema="schema/WizardNodeView.exsd"/>
   <extension-point id="DataType" name="DataType" schema="schema/DataType.exsd"/>
   <extension
         point="org.knime.core.NodeExecutionJobManagerFactory">
      <NodeExecutionJobManagerFactory
            JobManagerFactory="org.knime.core.node.exec.ThreadNodeExecutionJobManagerFactory">
      </NodeExecutionJobManagerFactory>
   </extension>
   <extension
         point="org.knime.core.DataValueRenderer">
      <dataValue
            valueClass="org.knime.core.data.IntValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.IntValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.LongValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.IntValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.StringValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.StringValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.MultiLineStringValueRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.blob.BinaryObjectDataValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.blob.BinaryObjectDataValueRenderer$ShortHexdumpFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.blob.BinaryObjectDataValueRenderer$LongHexdumpFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.blob.BinaryObjectDataValueMetaRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.vector.bitvector.BitVectorValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BitVectorValueStringRenderer$HexRendererFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BitVectorValueStringRenderer$BinRendererFactory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BitVectorValuePixelRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BitVectorValueStringRenderer$SetBitsRendererFactory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.BooleanValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BooleanValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.vector.bytevector.ByteVectorValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.ByteVectorValueStringRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.ByteVectorValuePixelRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.collection.CollectionDataValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.collection.CollectionValueRenderer$ShortRendererFactory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.collection.CollectionValueRenderer$FullRendererFactory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.image.png.PNGImageValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.image.png.PNGImageValueRendererFactoryUtil$StandardRendererFactory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.ComplexNumberValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.ComplexNumberValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.date.DateAndTimeValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.date.DateAndTimeValueRenderer$UsRendererFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.date.DateAndTimeValueRenderer$DefaultRendererFactory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.date.DateAndTimeValueRenderer$Iso8061RendererFactory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.DoubleValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleValueRenderer$StandardRendererFactory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleValueRenderer$FullPrecisionRendererFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleValueRenderer$PercentageRendererFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleGrayValueRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleBarRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.FuzzyIntervalValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.FuzzyNumberValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.IntervalValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.model.PortObjectValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.model.PortObjectValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.xml.XMLValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.xml.XMLValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.xml.PMMLValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.xml.XMLValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.image.ImageValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.ImageValueRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>      
   </extension>
   <extension
         point="org.knime.core.DatabaseUtility">
      <databaseUtility
            class="org.knime.core.node.port.database.SQLiteUtility"
            database="sqlite">
      </databaseUtility>
      <databaseUtility
            class="org.knime.core.node.port.database.MySQLUtility"
            database="mysql">
      </databaseUtility>
      <databaseUtility
            class="org.knime.core.node.port.database.PostgreSQLUtility"
            database="postgresql">
      </databaseUtility>
      <databaseUtility
            class="org.knime.core.node.port.database.OracleUtility"
            database="oracle">
      </databaseUtility>
      <databaseUtility
            class="org.knime.core.node.port.database.SQLServerUtility"
            database="sqlserver">
      </databaseUtility>
      <databaseUtility
            class="org.knime.core.node.port.database.DB2Utility"
            database="db2">
      </databaseUtility>
   </extension>
   <extension
         point="org.knime.core.WizardNodeView">
      <wizardNodeView
            description="This browser uses the native system browser that SWT can use. In a typical environment this should be Internet Explorer on Windows and WebKit on Linux and Mac."
            name="Internal Browser"
            viewClass="org.knime.core.node.wizard.WizardNodeView">
      </wizardNodeView>
   </extension>
   <extension
         point="org.knime.core.DataType">
      <DataType
            cellClass="org.knime.core.data.def.IntCell"
            factoryClass="org.knime.core.data.def.IntCell$IntCellFactory">
         <serializer
               cellClass="org.knime.core.data.def.IntCell"
               serializerClass="org.knime.core.data.def.IntCell$IntCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.StringCell"
            factoryClass="org.knime.core.data.def.StringCell$StringCellFactory">
         <serializer
               cellClass="org.knime.core.data.def.StringCell"
               serializerClass="org.knime.core.data.def.StringCell$StringSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.DoubleCell"
            factoryClass="org.knime.core.data.def.DoubleCell$DoubleCellFactory">
         <serializer
               cellClass="org.knime.core.data.def.DoubleCell"
               serializerClass="org.knime.core.data.def.DoubleCell$DoubleSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.date.DateAndTimeCell"
            factoryClass="org.knime.core.data.date.DateAndTimeCellFactory">
         <serializer
               cellClass="org.knime.core.data.date.DateAndTimeCell"
               serializerClass="org.knime.core.data.date.DateAndTimeCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.BooleanCell"
            factoryClass="org.knime.core.data.def.BooleanCell$BooleanCellFactory">
         <serializer
               cellClass="org.knime.core.data.def.BooleanCell"
               serializerClass="org.knime.core.data.def.BooleanCell$BooleanSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.ComplexNumberCell"
            factoryClass="org.knime.core.data.def.ComplexNumberCell$ComplexNumberCellFactory">
         <serializer
               cellClass="org.knime.core.data.def.ComplexNumberCell"
               serializerClass="org.knime.core.data.def.ComplexNumberCell$ComplexNumberSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.FuzzyIntervalCell">
         <serializer
               cellClass="org.knime.core.data.def.FuzzyIntervalCell"
               serializerClass="org.knime.core.data.def.FuzzyIntervalCell$FuzzyIntervalSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.LongCell"
            factoryClass="org.knime.core.data.def.LongCell$LongCellFactory">
         <serializer
               cellClass="org.knime.core.data.def.LongCell"
               serializerClass="org.knime.core.data.def.LongCell$LongSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.IntervalCell">
         <serializer
               cellClass="org.knime.core.data.def.IntervalCell"
               serializerClass="org.knime.core.data.def.IntervalCell$IntervalSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.FuzzyNumberCell">
         <serializer
               cellClass="org.knime.core.data.def.FuzzyNumberCell"
               serializerClass="org.knime.core.data.def.FuzzyNumberCell$FuzzyNumberSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.MissingCell">
         <serializer
               cellClass="org.knime.core.data.MissingCell"
               serializerClass="org.knime.core.data.MissingCell$MissingSerializer">
         </serializer>
      </DataType>
     
      <DataType
            cellClass="org.knime.core.data.vector.bitvector.SparseBitVectorCell">
         <serializer
               cellClass="org.knime.core.data.vector.bitvector.SparseBitVectorCell"
               serializerClass="org.knime.core.data.vector.bitvector.SparseBitVectorCell$SparseBitVectorSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.vector.bitvector.DenseBitVectorCell"
            factoryClass="org.knime.core.data.vector.bitvector.DenseBitVectorCell$Factory">
         <serializer
               cellClass="org.knime.core.data.vector.bitvector.DenseBitVectorCell"
               serializerClass="org.knime.core.data.vector.bitvector.DenseBitVectorCell$DenseBitVectorSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.xml.XMLCell"
            factoryClass="org.knime.core.data.xml.XMLCellFactory">
         <serializer
               cellClass="org.knime.core.data.xml.XMLCell"
               serializerClass="org.knime.core.data.xml.XMLCell$XMLSerializer">
         </serializer>
         <serializer
               cellClass="org.knime.core.data.xml.XMLBlobCell"
               serializerClass="org.knime.core.data.xml.XMLBlobCell$XMLSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.image.png.PNGImageCell"
            factoryClass="org.knime.core.data.image.png.PNGImageCellFactory">
         <serializer
               cellClass="org.knime.core.data.image.png.PNGImageCell"
               serializerClass="org.knime.core.data.image.png.PNGImageCell$PNGSerializer">
         </serializer>
         <serializer
               cellClass="org.knime.core.data.image.png.PNGImageBlobCell"
               serializerClass="org.knime.core.data.image.png.PNGImageBlobCell$PNGSerializer">
         </serializer>
      </DataType> <DataType
            cellClass="org.knime.core.data.blob.BinaryObjectDataCell"
            factoryClass="org.knime.core.data.blob.BinaryObjectCellFactory">
         <serializer
               cellClass="org.knime.core.data.blob.BinaryObjectDataCell"
               serializerClass="org.knime.core.data.blob.BinaryObjectDataCell$BinaryObjectCellSerializer">
         </serializer>
         <serializer
               cellClass="org.knime.core.data.blob.BinaryObjectFileStoreDataCell"
               serializerClass="org.knime.core.data.blob.BinaryObjectFileStoreDataCell$BinaryObjectFileStoreCellSerializer">
         </serializer>
      <DataType
            cellClass="org.knime.core.data.xml.PMMLCell"
            factoryClass="org.knime.core.data.xml.PMMLCellFactory">
         <serializer
               cellClass="org.knime.core.data.xml.PMMLCell"
               serializerClass="org.knime.core.data.xml.PMMLCell$PMMLSerializer">
         </serializer>
         <serializer
               cellClass="org.knime.core.data.xml.PMMLBlobCell"
               serializerClass="org.knime.core.data.xml.PMMLBlobCell$PMMLSerializer">
         </serializer>
      </DataType>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.vector.bytevector.DenseByteVectorCell"
            factoryClass="org.knime.core.data.vector.bitvector.DenseByteVectorCell$Factory">
         <serializer
               cellClass="org.knime.core.data.vector.bytevector.DenseByteVectorCell"
               serializerClass="org.knime.core.data.vector.bytevector.DenseByteVectorCell$DenseByteVectorSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.vector.bytevector.SparseByteVectorCell">
         <serializer
               cellClass="org.knime.core.data.vector.bytevector.SparseByteVectorCell"
               serializerClass="org.knime.core.data.vector.bytevector.SparseByteVectorCell$SparseByteVectorSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.filestore.internal.FileStoreKeyDataCell">
         <serializer
               cellClass="org.knime.core.data.filestore.internal.FileStoreKeyDataCell"
               serializerClass="org.knime.core.data.filestore.internal.FileStoreKeyDataCell$FileStoreKeyCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.collection.ListCell">
         <serializer
               cellClass="org.knime.core.data.collection.ListCell"
               serializerClass="org.knime.core.data.collection.ListCell$ListCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.collection.SparseListCell">
         <serializer
               cellClass="org.knime.core.data.collection.SparseListCell"
               serializerClass="org.knime.core.data.collection.SparseListCell$SparseListCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.collection.SetCell">
         <serializer
               cellClass="org.knime.core.data.collection.SetCell"
               serializerClass="org.knime.core.data.collection.SetCell$SetCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.model.PortObjectCell">
         <serializer
               cellClass="org.knime.core.data.model.PortObjectCell"
               serializerClass="org.knime.core.data.model.PortObjectCell$PortObjectCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.core.data.def.TimestampCell">
         <serializer
               cellClass="org.knime.core.data.def.TimestampCell"
               serializerClass="org.knime.core.data.def.TimestampCell$TimestampCellSerializer">
         </serializer>
      </DataType>
   </extension>
</plugin>
